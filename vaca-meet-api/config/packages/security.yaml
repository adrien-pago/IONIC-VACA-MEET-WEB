security:
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # Nous pouvons supprimer ce provider puisque User n'existe pas
        # app_user_provider:
        #     entity:
        #         class: App\Entity\User
        #         property: email
        app_user_mobile_provider:
            entity:
                class: App\Entity\UserMobile
                property: username
        # Simplifier le provider chain pour n'utiliser que app_user_mobile_provider
        all_users:
            chain:
                providers: ['app_user_mobile_provider']
    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                provider: app_user_mobile_provider
        
        mobile_login:
            pattern: ^/api/mobile/login_check
            stateless: true
            json_login:
                check_path: /api/mobile/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                provider: app_user_mobile_provider
        
        api:
            pattern: ^/api
            stateless: true
            provider: all_users
            jwt: ~
        
        main:
            lazy: true
            provider: all_users

    # Note : l'ordre des access_control est important car ils sont vérifiés dans l'ordre
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/mobile/login_check, roles: PUBLIC_ACCESS }
        - { path: ^/api/mobile/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/mobile/test, roles: PUBLIC_ACCESS }
        - { path: ^/api/test, roles: PUBLIC_ACCESS }
        - { path: ^/api$, roles: PUBLIC_ACCESS } # Notez le $ qui signifie "fin de chaîne"

when@test:
    security:
        password_hashers:
            # Par mesure de performance, utilisez un hachage plus rapide en test
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
